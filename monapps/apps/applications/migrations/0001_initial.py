# Generated by Django 5.2 on 2025-08-13 13:08

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('assets', '0001_initial'),
        ('django_celery_beat', '0019_alter_periodictasks_options'),
    ]

    operations = [
        migrations.CreateModel(
            name='AppType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('description', models.TextField(blank=True, max_length=1000)),
                ('main_purp', models.CharField(choices=[('None', 'None'), ('Monitoring', 'Monitoring'), ('Leaking', 'Leaking'), ('Blocked', 'Blocked'), ('Flooded', 'Flooded'), ('Broken', 'Broken'), ('Malfunctioning', 'Malfunctioning')], default='None')),
                ('func_name', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'app_types',
            },
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_resample', models.BigIntegerField(default=60000)),
                ('settings', models.JSONField(blank=True, default=dict)),
                ('state', models.JSONField(blank=True, default=dict)),
                ('errors', models.JSONField(blank=True, default=dict)),
                ('warnings', models.JSONField(blank=True, default=dict)),
                ('cursor_ts', models.BigIntegerField(default=0)),
                ('is_enabled', models.BooleanField(default=False)),
                ('is_catching_up', models.BooleanField(default=False)),
                ('func_version', models.CharField(default='1.0.0', max_length=200)),
                ('status', models.IntegerField(blank=True, choices=[(0, 'Undefined'), (1, 'Ok'), (2, 'Warning'), (3, 'Error')], default=None, null=True)),
                ('curr_state', models.IntegerField(blank=True, choices=[(0, 'Undefined'), (1, 'Ok'), (2, 'Warning'), (3, 'Error')], default=None, null=True)),
                ('last_status_update_ts', models.BigIntegerField(blank=True, default=None, null=True)),
                ('last_curr_state_update_ts', models.BigIntegerField(blank=True, default=None, null=True)),
                ('status_use', models.IntegerField(choices=[(0, 'Dont Use'), (1, 'As Is'), (2, 'As Warning'), (3, 'As Error If All')], default=2)),
                ('curr_state_use', models.IntegerField(choices=[(0, 'Dont Use'), (1, 'As Is'), (2, 'As Warning'), (3, 'As Error If All')], default=2)),
                ('time_status_stale', models.BigIntegerField(default=1296000000)),
                ('time_curr_state_stale', models.BigIntegerField(default=600000)),
                ('is_status_stale', models.BooleanField(default=False)),
                ('is_curr_state_stale', models.BooleanField(default=False)),
                ('health', models.IntegerField(choices=[(0, 'Undefined'), (1, 'Ok'), (2, 'Warning'), (3, 'Error')], default=0)),
                ('time_health_error', models.BigIntegerField(default=600000)),
                ('created_ts', models.BigIntegerField(editable=False)),
                ('catch_up_interval', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='catching_up_apps', related_query_name='catching_up_app', to='django_celery_beat.intervalschedule')),
                ('invoc_interval', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='norm_speed_apps', related_query_name='norm_speed_app', to='django_celery_beat.intervalschedule')),
                ('parent', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='applications', related_query_name='application', to='assets.asset')),
                ('task', models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='django_celery_beat.periodictask')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='applications.apptype')),
            ],
            options={
                'db_table': 'applications',
            },
        ),
    ]
